rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // 헬퍼 함수들
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return request.auth != null && 
             firestore.exists(/databases/(default)/documents/admins/$(request.auth.uid));
    }
    
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwnerOrAdmin(userId) {
      return isOwner(userId) || isAdmin();
    }
    
    // 상담/채팅 보조 함수
    function isSupportAccount(userId) {
      return userId == 'support';
    }
    
    // 최근 활동 검증
    function hasRecentActivity() {
      return request.auth != null && request.auth.token.auth_time > timestamp.date() - duration.value(30, 'd');
    }
    
    // 신고 파일 전용 검증 (더 관대한 조건)
    function isValidReportFile() {
      return request.resource.contentType in [
        'image/jpeg', 'image/png', 'image/gif', 'image/webp',
        'application/pdf', 'application/msword', 
        'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
        'text/plain'
      ];
    }
    
    // 업무시간 검증 (DDoS 방지)
    function isBusinessHours() {
      return request.time.dayOfWeek() >= 1 && request.time.dayOfWeek() <= 7 &&
             request.time.hours() >= 6 && request.time.hours() < 24;
    }
    
    // 이미지 파일 검증
    function isValidImageType() {
      return request.resource.contentType in [
        'image/jpeg', 'image/png', 'image/gif', 'image/webp'
      ];
    }
    
    // 프로필 이미지 전용 검증 (더 엄격)
    function isValidProfileImage() {
      return request.resource.contentType in [
        'image/jpeg', 'image/png'
      ];
    }
    
    // 비디오 파일 검증
    function isValidVideoType() {
      return request.resource.contentType in [
        'video/mp4', 'video/quicktime', 'video/x-msvideo', 'video/webm'
      ];
    }
    
    // 문서 파일 검증
    function isValidDocumentType() {
      return request.resource.contentType in [
        'application/pdf', 'application/msword', 
        'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
        'image/jpeg', 'image/png' // 스캔된 문서
      ];
    }
    
    // 사용자 프로필 이미지
    match /profile-images/{userId}/{filename} {
      // 본인만 업로드/수정/삭제 가능
      allow create, update, delete: if isOwner(userId) && 
                                       isValidProfileImage() && 
                                       hasRecentActivity() &&
                                       // 프로필 이미지 파일명 검증 (보안 강화)
                                       filename.matches('^[a-zA-Z0-9_-]+\\.(jpg|jpeg|png)$');
      
      // 모든 사용자가 읽기 가능 (게시글 상세보기용, 비로그인 포함)
      allow read: if true;
    }
    
    // 회원정보 수정 관련 임시 파일 (프로필 이미지 업로드 등)
    match /user-profile-temp/{userId}/{filename} {
      // 본인만 임시 업로드 가능 (24시간 후 자동 삭제)
      allow create: if isOwner(userId) && 
                       isValidProfileImage() && 
                       hasRecentActivity() &&
                       filename.matches('^temp_[0-9]+\\.(jpg|jpeg|png)$');
      
      // 본인만 읽기 가능
      allow read: if isOwner(userId);
      
      // 본인과 시스템(24시간 후)만 삭제 가능
      allow delete: if isOwner(userId);
    }
    
    // 자격증/면허증 파일
    match /certificates/{userId}/{filename} {
      // 본인과 관리자만 업로드/수정/삭제 가능
      allow create, update, delete: if (isOwner(userId) || isAdmin()) && 
                                       isValidDocumentType() && 
                                       hasRecentActivity();
      
      // 승인된 치료사의 자격증은 다른 사용자도 읽기 가능 (공개)
      allow read: if isAuthenticated();
    }
    
    // 채팅 메시지 첨부파일 (1:1 채팅용)
    match /chat-files/{chatId}/{filename} {
      // 채팅 참여자만 업로드/읽기 가능 (참여자 검증 강화)
      allow create, read: if isAuthenticated() && 
                             (isValidImageType() || isValidDocumentType()) &&
                             hasRecentActivity() &&
                             firestore.exists(/databases/(default)/documents/chats/$(chatId)) &&
                             (
                               // 일반 케이스: 업로더가 채팅 참여자
                               request.auth.uid in firestore.get(/databases/(default)/documents/chats/$(chatId)).data.participants ||
                               // 지원 채널(support) 케이스: 관리자가 업로드 허용
                               (
                                 isAdmin() &&
                                 firestore.get(/databases/(default)/documents/chats/$(chatId)).data.therapistId == 'support'
                               )
                             );
      
      // 업로드한 본인과 관리자만 삭제 가능
      allow delete: if isAuthenticated() && 
                       (isAdmin() ||
                        (firestore.exists(/databases/(default)/documents/chats/$(chatId)) &&
                         request.auth.uid in firestore.get(/databases/(default)/documents/chats/$(chatId)).data.participants));
    }
    
    // 1:1 채팅 스크린샷 (증빙용)
    match /chat-evidence/{chatId}/{filename} {
      // 채팅 참여자만 업로드 가능 (신고/증빙 목적)
      allow create: if isAuthenticated() && 
                       isValidImageType() && 
                       hasRecentActivity() && 
                       filename.matches('^evidence_[0-9]+\\.(jpg|jpeg|png)$') &&
                       // 채팅 참여자 확인
                       firestore.exists(/databases/(default)/documents/chats/$(chatId)) &&
                       request.auth.uid in firestore.get(/databases/(default)/documents/chats/$(chatId)).data.participants;
      
      // 관리자만 읽기 가능 (신고 처리 시)
      allow read: if isAdmin();
      
      // 관리자만 삭제 가능
      allow delete: if isAdmin();
    }
    
    // 게시글 첨부파일 (posts용)
    match /posts/{postId}/attachments/{filename} {
      // 게시글 작성자만 업로드/삭제 가능
      allow create, delete: if isAuthenticated() && 
                               (isValidImageType() || isValidDocumentType()) &&
                               hasRecentActivity();
      
      // 모든 인증된 사용자가 읽기 가능 (공개 게시글)
      allow read: if isAuthenticated();
      
      // 관리자도 삭제 가능
      allow delete: if isAdmin();
    }
    
    // 치료사 프로필 사진 (상세 프로필용)
    match /teacher-profiles/{userId}/profile-image/{filename} {
      // 치료사 본인만 업로드/수정/삭제 가능
      allow create, update, delete: if isAuthenticated() && 
                                       isOwner(userId) &&
                                       isValidProfileImage() &&
                                       hasRecentActivity();
      
      // 모든 사용자가 읽기 가능 (공개 프로필, 비로그인 포함)
      allow read: if true;
    }
    
    // 치료사 소개 비디오 (상세 프로필용)
    match /teacher-profiles/{userId}/introduction-video/{filename} {
      // 치료사 본인만 업로드/수정/삭제 가능
      allow create, update, delete: if isAuthenticated() && 
                                       isOwner(userId) &&
                                       isValidVideoType() &&
                                       hasRecentActivity();
      
      // 모든 사용자가 읽기 가능 (공개 소개 비디오, 비로그인 포함)
      allow read: if true;
    }
    
    // 치료사 인증서/자격증 (상세 프로필용)
    match /teacher-profiles/{userId}/certifications/{filename} {
      // 치료사 본인만 업로드/수정/삭제 가능
      allow create, update, delete: if isAuthenticated() && 
                                       isOwner(userId) &&
                                       isValidDocumentType() &&
                                       hasRecentActivity();
      
      // 치료사 본인, 관리자, 학부모가 지원자 정보 조회 시에도 읽기 가능
      allow read: if isAuthenticated() && 
                     (isOwner(userId) || isAdmin() ||
                      // 학부모가 지원자 정보를 볼 때 인증서도 확인 가능
                      (request.auth != null &&
                       firestore.exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
                       firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.userType == 'parent'));
    }
    
    // 치료사 등록 관련 파일들 (TeacherSearchBoard용)
    match /therapist-registration/{userId}/profile-image/{filename} {
      // 치료사 본인만 업로드/수정/삭제 가능
      allow create, update, delete: if isAuthenticated() && 
                                       isOwner(userId) &&
                                       isValidProfileImage() &&
                                       hasRecentActivity();
      
      // 관리자, 본인, 학부모가 지원자 정보 조회 시에도 읽기 가능
      allow read: if isAuthenticated() && 
                     (isOwner(userId) || isAdmin() ||
                      // 학부모가 지원자 정보를 볼 때 프로필 이미지도 확인 가능
                      (firestore.exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
                       firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.userType == 'parent'));
    }
    
    // [NEW] 치료사 등록 관련 파일들 - plural 경로 지원 (therapist-registrations/{uid}/{regId}/...)
    // 프로필 이미지
    match /therapist-registrations/{userId}/{regId}/profile/{filename} {
      // 본인만 업로드/수정/삭제 가능
      allow create, update, delete: if isAuthenticated() && 
                                       isOwner(userId) &&
                                       isValidProfileImage() &&
                                       hasRecentActivity();
      // 관리자, 본인, 학부모(지원자 정보 열람 시) 읽기 허용
      allow read: if isAuthenticated() && 
                     (isOwner(userId) || isAdmin() ||
                      (firestore.exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
                       firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.userType == 'parent'));
    }

    // 학력 증빙
    match /therapist-registrations/{userId}/{regId}/academic/{filename} {
      allow create: if isAuthenticated() && isOwner(userId) && isValidDocumentType() && hasRecentActivity();
      allow read: if isAuthenticated() && (isOwner(userId) || isAdmin() || (firestore.exists(/databases/(default)/documents/users/$(request.auth.uid)) && firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.userType == 'parent'));
      allow delete: if isAuthenticated() && (isOwner(userId) || isAdmin());
    }

    // 경력 증빙
    match /therapist-registrations/{userId}/{regId}/career/{filename} {
      allow create: if isAuthenticated() && isOwner(userId) && isValidDocumentType() && hasRecentActivity();
      allow read: if isAuthenticated() && (isOwner(userId) || isAdmin() || (firestore.exists(/databases/(default)/documents/users/$(request.auth.uid)) && firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.userType == 'parent'));
      allow delete: if isAuthenticated() && (isOwner(userId) || isAdmin());
    }

    // 자격증 사본
    match /therapist-registrations/{userId}/{regId}/license/{filename} {
      allow create: if isAuthenticated() && isOwner(userId) && isValidDocumentType() && hasRecentActivity();
      allow read: if isAuthenticated() && (isOwner(userId) || isAdmin() || (firestore.exists(/databases/(default)/documents/users/$(request.auth.uid)) && firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.userType == 'parent'));
      allow delete: if isAuthenticated() && (isOwner(userId) || isAdmin());
    }

    // 성범죄 경력 조회 증명서 (민감)
    match /therapist-registrations/{userId}/{regId}/crime-check/{filename} {
      allow create: if isAuthenticated() && isOwner(userId) && isValidDocumentType() && hasRecentActivity();
      allow read, delete: if isAuthenticated() && (isOwner(userId) || isAdmin());
    }

    // 통장 사본 (민감)
    match /therapist-registrations/{userId}/{regId}/bankbook/{filename} {
      allow create: if isAuthenticated() && isOwner(userId) && isValidDocumentType() && hasRecentActivity();
      allow read, delete: if isAuthenticated() && (isOwner(userId) || isAdmin());
    }

    // 자기소개 영상/기타 증빙
    match /therapist-registrations/{userId}/{regId}/intro/{filename} {
      // 비디오 또는 문서 허용 (1분 영상 등)
      allow create: if isAuthenticated() && isOwner(userId) && (isValidVideoType() || isValidDocumentType()) && hasRecentActivity();
      allow read: if isAuthenticated() && (isOwner(userId) || isAdmin() || (firestore.exists(/databases/(default)/documents/users/$(request.auth.uid)) && firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.userType == 'parent'));
      allow delete: if isAuthenticated() && (isOwner(userId) || isAdmin());
    }

    // 학력 증빙 서류 파일 (졸업증명서 등)
    match /therapist-registration/{userId}/academic-credentials/{filename} {
      // 치료사 본인만 업로드 가능
      allow create: if isAuthenticated() && 
                       isOwner(userId) &&
                       isValidDocumentType() &&
                       hasRecentActivity() &&
                       // 학력 증빙 서류 파일 크기 제한 (15MB)
                       request.resource.size < 15 * 1024 * 1024;
      
      // 관리자, 본인, 학부모가 지원자 정보 조회 시 읽기 가능 
      allow read: if isAuthenticated() && 
                     (isOwner(userId) || isAdmin() ||
                      // 학부모가 지원자의 학력 증빙을 확인할 수 있음
                      (firestore.exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
                       firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.userType == 'parent'));
      
      // 관리자와 본인만 삭제 가능
      allow delete: if isAuthenticated() && 
                       (isOwner(userId) || isAdmin());
    }
    
    // 경력증명서 파일
    match /therapist-registration/{userId}/experience-proof/{filename} {
      // 치료사 본인만 업로드 가능
      allow create: if isAuthenticated() && 
                       isOwner(userId) &&
                       isValidDocumentType() &&
                       hasRecentActivity() &&
                       // 경력증명서 파일 크기 제한 (15MB)
                       request.resource.size < 15 * 1024 * 1024;
      
      // 관리자, 본인, 학부모가 지원자 정보 조회 시 읽기 가능
      allow read: if isAuthenticated() && 
                     (isOwner(userId) || isAdmin() ||
                      // 학부모가 지원자의 경력증명서를 확인할 수 있음
                      (firestore.exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
                       firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.userType == 'parent'));
      
      // 관리자와 본인만 삭제 가능
      allow delete: if isAuthenticated() && 
                       (isOwner(userId) || isAdmin());
    }
    
    // 자격증 파일 (등록용)
    match /therapist-registration/{userId}/certificates/{filename} {
      // 치료사 본인만 업로드 가능
      allow create: if isAuthenticated() && 
                       isOwner(userId) &&
                       isValidDocumentType() &&
                       hasRecentActivity() &&
                       // 자격증 파일 크기 제한 (10MB)
                       request.resource.size < 10 * 1024 * 1024;
      
      // 관리자, 본인, 학부모가 지원자 정보 조회 시 읽기 가능
      allow read: if isAuthenticated() && 
                     (isOwner(userId) || isAdmin() ||
                      // 학부모가 지원자의 자격증을 확인할 수 있음
                      (firestore.exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
                       firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.userType == 'parent'));
      
      // 관리자와 본인만 삭제 가능
      allow delete: if isAuthenticated() && 
                       (isOwner(userId) || isAdmin());
    }
    
    // 통장사본 파일
    match /therapist-registration/{userId}/bankbook/{filename} {
      // 치료사 본인만 업로드 가능
      allow create: if isAuthenticated() && 
                       isOwner(userId) &&
                       isValidDocumentType() &&
                       hasRecentActivity() &&
                       // 통장사본 파일 크기 제한 (5MB)
                       request.resource.size < 5 * 1024 * 1024;
      
      // 관리자와 본인만 읽기/삭제 가능 (민감한 개인정보)
      allow read, delete: if isAuthenticated() && 
                             (isOwner(userId) || isAdmin());
    }
    
    // 성범죄 경력 조회 증명서 파일
    match /therapist-registration/{userId}/criminal-background-check/{filename} {
      // 치료사 본인만 업로드 가능
      allow create: if isAuthenticated() && 
                       isOwner(userId) &&
                       isValidDocumentType() &&
                       hasRecentActivity() &&
                       // 성범죄 경력 조회 증명서 파일 크기 제한 (10MB)
                       request.resource.size < 10 * 1024 * 1024;
      
      // 관리자와 본인만 읽기/삭제 가능 (민감한 개인정보)
      allow read, delete: if isAuthenticated() && 
                             (isOwner(userId) || isAdmin());
    }
    
    // 기타 첨부파일
    match /therapist-registration/{userId}/misc-documents/{filename} {
      // 치료사 본인만 업로드 가능 (선택사항)
      allow create: if isAuthenticated() && 
                       isOwner(userId) &&
                       isValidDocumentType() &&
                       hasRecentActivity() &&
                       // 기타 첨부파일 크기 제한 (15MB)
                       request.resource.size < 15 * 1024 * 1024;
      
      // 관리자와 본인만 읽기/삭제 가능
      allow read, delete: if isAuthenticated() && 
                             (isOwner(userId) || isAdmin());
    }
    
    // 1분 자기소개 영상 파일
    match /therapist-registration/{userId}/introduction-video/{filename} {
      // 치료사 본인만 업로드 가능 (선택사항)
      allow create: if isAuthenticated() && 
                       isOwner(userId) &&
                       isValidVideoType() &&
                       hasRecentActivity() &&
                       // 1분 자기소개 영상 파일 크기 제한 (100MB)
                       request.resource.size < 100 * 1024 * 1024;
      
      // 관리자, 본인, 학부모가 지원자 정보 조회 시 읽기 가능
      allow read: if isAuthenticated() && 
                     (isOwner(userId) || isAdmin() ||
                      // 학부모가 지원자의 자기소개 영상을 확인할 수 있음
                      (firestore.exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
                       firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.userType == 'parent'));
      
      // 관리자와 본인만 삭제 가능
      allow delete: if isAuthenticated() && 
                       (isOwner(userId) || isAdmin());
    }
    
    // 후기 첨부 파일 (학부모 후기용)
    match /teacher-reviews/{reviewId}/attachments/{filename} {
      // 후기 작성자만 업로드 가능
      allow create: if isAuthenticated() && 
                       isValidImageType() &&
                       hasRecentActivity() &&
                       // 후기 첨부파일 크기 제한 (5MB)
                       request.resource.size < 5 * 1024 * 1024;
      
      // 모든 인증된 사용자가 읽기 가능 (공개 후기)
      allow read: if isAuthenticated();
      
      // 관리자만 삭제 가능
      allow delete: if isAdmin();
    }
    
    // 일반 후기 첨부 파일 (reviews 컬렉션용)
    match /reviews/{reviewId}/attachments/{filename} {
      // 후기 작성자만 업로드 가능 (Firestore에서 userId 확인)
      allow create: if isAuthenticated() && 
                       isValidImageType() &&
                       hasRecentActivity() &&
                       // 후기 첨부파일 크기 제한 (5MB)
                       request.resource.size < 5 * 1024 * 1024 &&
                       // Firestore에서 해당 후기의 작성자인지 확인
                       firestore.exists(/databases/(default)/documents/reviews/$(reviewId)) &&
                       firestore.get(/databases/(default)/documents/reviews/$(reviewId)).data.userId == request.auth.uid;
      
      // 모든 인증된 사용자가 읽기 가능 (공개 후기)
      allow read: if isAuthenticated();
      
      // 후기 작성자와 관리자만 삭제 가능
      allow delete: if isAuthenticated() && 
                       (isAdmin() || 
                        (firestore.exists(/databases/(default)/documents/reviews/$(reviewId)) &&
                         firestore.get(/databases/(default)/documents/reviews/$(reviewId)).data.userId == request.auth.uid));
    }
    
    // 직거래 신고 증빙 파일 - 실용적인 운영용 보안 규칙
    match /reports/{reportId}/evidence/{filename} {
      // 증빙 파일 업로드: 누구나 가능 (익명 신고 지원), 기본적인 파일 검증
      allow create: if isValidReportFile();
      
      // 증빙 파일 읽기: 특정 관리자 이메일 또는 관리자 컬렉션에 등록된 사용자
      allow read: if isAuthenticated() && 
                     (request.auth.token.email == 'dudals7334@naver.com' ||
                      request.auth.token.email == 'everystars@naver.com' ||
                      firestore.exists(/databases/(default)/documents/admins/$(request.auth.uid)));
      
      // 증빙 파일 수정: 허용하지 않음 (원본 보존)
      allow update: if false;
      
      // 증빙 파일 삭제: 특정 관리자만 가능 (조사 완료 후)
      allow delete: if isAuthenticated() && 
                       (request.auth.token.email == 'dudals7334@naver.com' ||
                        request.auth.token.email == 'everystars@naver.com' ||
                        firestore.exists(/databases/(default)/documents/admins/$(request.auth.uid)));
    }
    
    // 임시 파일 (만료시간 포함)
    match /temp/{ts}/{filename} {
      // 인증된 사용자만 업로드 가능 (24시간 후 자동 삭제)
      allow create: if isAuthenticated() && 
                       (isValidImageType() || isValidDocumentType()) &&
                       hasRecentActivity() &&
                       int(ts) > 0; // 타임스탬프 검증
      
      // 모든 사용자가 읽기 가능 (임시 공유용)
      allow read: if true;
      
      // 24시간 후 자동 삭제 (또는 업로드한 본인이 삭제 가능)
      allow delete: if isAuthenticated() && 
                       (request.time.toMillis() > int(ts) + 86400000);
    }
    
    // 관리자 시스템 파일들 (공지사항 첨부 등)
    match /admin-assets/{filename} {
      // 관리자만 업로드/수정/삭제 가능
      allow create, update, delete: if isAdmin() &&
                                       (isValidImageType() || isValidDocumentType());
      
      // 모든 사용자가 읽기 가능 (공지사항 첨부파일 등)
      allow read: if true;
    }
    
    // 사이트 로고, 배너 등 공개 자료
    match /public-assets/{filename} {
      // 관리자만 업로드/수정/삭제 가능
      allow create, update, delete: if isAdmin() &&
                                       isValidImageType();
      
      // 모든 사용자가 읽기 가능
      allow read: if true;
    }
    
    // 이용권 구매 영수증 및 결제 서류
    match /subscription-receipts/{userId}/{filename} {
      // 본인과 관리자만 업로드/읽기/삭제 가능
      allow create, read, delete: if (isOwner(userId) || isAdmin()) &&
                                     isValidDocumentType() &&
                                     hasRecentActivity() &&
                                     // 영수증 파일명 검증
                                     filename.matches('^receipt_[0-9]+_[a-zA-Z0-9_-]+\\.(pdf|jpg|jpeg|png)$');
    }
    
    // 프로필 수정 백업 파일 (이전 프로필 이미지 등)
    match /profile-backups/{userId}/{filename} {
      // 시스템과 관리자만 생성 가능 (자동 백업)
      allow create: if isAdmin() &&
                       isValidProfileImage() &&
                       filename.matches('^backup_[0-9]+_[a-zA-Z0-9_-]+\\.(jpg|jpeg|png)$') &&
                       // 백업 파일 크기 제한 (10MB)
                       request.resource.size < 10 * 1024 * 1024;
      
      // 본인과 관리자만 읽기 가능
      allow read: if isOwnerOrAdmin(userId);
      
      // 관리자만 삭제 가능 (복구 목적)
      allow delete: if isAdmin();
    }
    
    // 사용자 데이터 내보내기 파일 (GDPR 대응)
    match /user-exports/{userId}/{filename} {
      // 본인만 읽기/삭제 가능
      allow read, delete: if isOwner(userId) &&
                             filename.matches('^export_[0-9]+_[a-zA-Z0-9_-]+\\.(json|pdf|zip)$');
      
      // 시스템/관리자만 생성 가능 (사용자 요청 시)
      allow create: if isAdmin() &&
                       request.resource.contentType in [
                         'application/json', 'application/pdf', 'application/zip'
                       ] &&
                       filename.matches('^export_[0-9]+_[a-zA-Z0-9_-]+\\.(json|pdf|zip)$');
    }
    
    // 이용권 구매 관련 임시 파일
    match /subscription-temp/{userId}/{filename} {
      // 본인만 업로드 가능 (결제 과정 중)
      allow create: if isOwner(userId) && 
                       isValidDocumentType() &&
                       hasRecentActivity() &&
                       filename.matches('^temp_payment_[0-9]+\\.(pdf|jpg|jpeg|png)$');
      
      // 본인만 읽기 가능
      allow read: if isOwner(userId);
      
      // 본인과 시스템만 삭제 가능 (결제 완료 후 자동 삭제)
      allow delete: if isOwner(userId) || isAdmin();
    }
    
    // 입금 증빙 자료 (결제 확인용)
    match /payment-confirmations/{userId}/{filename} {
      // 본인만 업로드 가능
      allow create: if isOwner(userId) && 
                       isValidDocumentType() &&
                       hasRecentActivity() &&
                       filename.matches('^deposit_proof_[0-9]+\\.(pdf|jpg|jpeg|png)$');
      
      // 본인과 관리자만 읽기 가능
      allow read: if isOwnerOrAdmin(userId);
      
      // 관리자만 삭제 가능 (확인 완료 후)
      allow delete: if isAdmin();
    }
    
    // 결제 관련 스크린샷 (입금 확인서 등)
    match /payment-screenshots/{userId}/{filename} {
      // 본인만 업로드 가능
      allow create: if isOwner(userId) && 
                       isValidImageType() &&
                       hasRecentActivity() &&
                       filename.matches('^screenshot_[0-9]+\\.(jpg|jpeg|png)$');
      
      // 본인과 관리자만 읽기 가능
      allow read: if isOwnerOrAdmin(userId);
      
      // 본인과 관리자만 삭제 가능
      allow delete: if isOwnerOrAdmin(userId);
    }
    
    // 이용권 관련 증빙 파일 (학부모용)
    match /subscription-documents/{userId}/{filename} {
      // 본인만 업로드 가능
      allow create: if isOwner(userId) && 
                       isValidDocumentType() &&
                       hasRecentActivity() &&
                       filename.matches('^subscription_[0-9]+\\.(pdf|jpg|jpeg|png)$');
      
      // 본인과 관리자만 읽기 가능
      allow read: if isOwnerOrAdmin(userId);
      
      // 본인과 관리자만 삭제 가능
      allow delete: if isOwnerOrAdmin(userId);
    }
    
    // 이용권 사용 증빙 파일 (인터뷰 기록 등)
    match /usage-evidence/{userId}/{filename} {
      // 본인과 치료사만 업로드 가능
      allow create: if isAuthenticated() && 
                       (isOwner(userId) || 
                        (request.auth != null && 
                         firestore.exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
                         firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.userType == 'therapist')) &&
                       isValidImageType() &&
                       hasRecentActivity() &&
                       filename.matches('^usage_[0-9]+\\.(jpg|jpeg|png)$');
      
      // 본인과 관리자만 읽기 가능
      allow read: if isOwnerOrAdmin(userId);
      
      // 관리자만 삭제 가능 (기록 보존)
      allow delete: if isAdmin();
    }
    
    // 시스템 로그 파일 (관리자 전용)
    match /system-logs/{logType}/{filename} {
      // 관리자만 읽기/생성/삭제 가능
      allow read, create, delete: if isAdmin() &&
                                     logType in ['pricing-access', 'profile-edits', 'subscription-purchases', 'payment-confirmations', 'subscription-usage'] &&
                                     filename.matches('^[0-9]{4}-[0-9]{2}-[0-9]{2}_[a-zA-Z0-9_-]+\\.log$') &&
                                     request.resource.contentType == 'text/plain';
    }
    
    // 인터뷰권 사용 증빙 스크린샷
    match /interview-evidence/{userId}/{filename} {
      // 본인만 업로드 가능 (인터뷰권 사용 증빙)
      allow create: if isOwner(userId) && 
                       isValidImageType() &&
                       hasRecentActivity() &&
                       filename.matches('^interview_[0-9]+\\.(jpg|jpeg|png)$');
      
      // 본인과 관리자만 읽기 가능
      allow read: if isOwnerOrAdmin(userId);
      
      // 관리자만 삭제 가능 (기록 보존)
      allow delete: if isAdmin();
    }
    
    // 채팅 알림 관련 임시 파일 (스크린샷 등)
    match /notification-temp/{userId}/{filename} {
      // 본인만 업로드 가능 (알림 테스트용)
      allow create: if isOwner(userId) && 
                       isValidImageType() &&
                       hasRecentActivity() &&
                       filename.matches('^notification_test_[0-9]+\\.(jpg|jpeg|png)$');
      
      // 본인만 읽기 가능
      allow read: if isOwner(userId);
      
      // 본인과 시스템(24시간 후)만 삭제 가능
      allow delete: if isOwner(userId) || isAdmin();
    }
    
    // 전화번호 차단 증빙 스크린샷 (보안 감사)
    match /phone-filter-evidence/{chatId}/{filename} {
      // 시스템만 업로드 가능 (자동 스크린샷)
      allow create: if isAdmin() &&
                       isValidImageType() &&
                       filename.matches('^blocked_[0-9]+\\.(jpg|jpeg|png)$');
      
      // 관리자만 읽기 가능
      allow read: if isAdmin();
      
      // 관리자만 삭제 가능 (보안 감사 후)
      allow delete: if isAdmin();
    }
    
    // 기본적으로 모든 다른 경로는 거부
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
